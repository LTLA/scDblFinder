% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doubletFinder.R
\name{plDoubletFinder}
\alias{plDoubletFinder}
\title{plDoubletFinder}
\usage{
plDoubletFinder(sce, artificialDoublets = NULL, clusters = NULL,
  minClusSize = 50, d = 10, dbr = 0.021, dbr.sd = 0.01,
  graph.type = c("knn", "snn"), fullTable = FALSE, verbose = TRUE,
  ...)
}
\arguments{
\item{sce}{An object of class `SingleCellExperiment`}

\item{artificialDoublets}{The approximate number of artificial doublets to create. If
NULL, will be the maximum of the number of cells or `3*nbClusters^2`.}

\item{clusters}{The optional cluster assignments (if ommitted, will run `quickCluster`).
This is used to make doublets more efficiently.}

\item{minClusSize}{The minimum cluster size for `quickCluster` (default 50)}

\item{d}{The number of dimensions used to build the KNN network (default 10)}

\item{dbr}{The expected doublet rate, see `doubletThresholding` for more information.}

\item{dbr.sd}{The standard deviation of the doublet rate, defaults to 0.01.}

\item{graph.type}{Either 'snn' or 'knn' (default).}

\item{fullTable}{Logical; whether to return the full table including artificial 
doublets (default FALSE), rather than the table for real cells only.}

\item{verbose}{Logical; whether to print messages and the thresholding plot (default
TRUE).}

\item{...}{arguments passed to `scran::build*NNGraph`; can for instance be used to
pass `BPPARAM` and speed up the graph building through multithreading.}
}
\value{
A data.frame including, for each cells (rows, in the order in which they appear
in the `sce` object), the number of neighbors considered, the number of these neighbors
 that are from artificial doublets, the ratio of neighbors that are from artificial 
 doublets (which represents a quantitative doublet the score), the enrichment in 
 artificial doublets, and the classification (after applying the threshold).
}
\description{
An approach similar to `DoubletFinder` for identifying doublets, but much 
simpler/faster, independent from normalization (executed directly on counts), and
arguably more accurate.
}
