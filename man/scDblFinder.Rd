% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scDblFinder.R
\name{scDblFinder}
\alias{scDblFinder}
\title{scDblFinder}
\usage{
scDblFinder(
  sce,
  clusters = NULL,
  samples = NULL,
  artificialDoublets = NULL,
  knownDoublets = NULL,
  clust.method = c("fastcluster", "overcluster"),
  use.cxds = TRUE,
  minClusSize = min(50, ncol(sce)/5),
  maxClusSize = NULL,
  nfeatures = 1000,
  dims = NULL,
  dbr = NULL,
  dbr.sd = 0.02,
  k = 15,
  returnType = c("sce", "table", "full"),
  score = c("xgb", "xgb.local.optim", "weighted", "ratio"),
  threshold = TRUE,
  verbose = is.null(samples),
  BPPARAM = SerialParam()
)
}
\arguments{
\item{sce}{A \code{\link[SummarizedExperiment]{SummarizedExperiment-class}},
\code{\link[SingleCellExperiment]{SingleCellExperiment-class}}, or array of
counts.}

\item{clusters}{The optional cluster assignments (if omitted, will run 
clustering). This is used to make doublets more efficiently. \code{clusters} 
should either be a vector of labels for each cell, or the name of a colData 
column of \code{sce}.}

\item{samples}{A vector of the same length as cells (or the name of a column 
of \code{colData(x)}), indicating to which sample each cell belongs. Here, a 
sample is understood as being processed independently. If omitted, doublets 
will be searched for with all cells together. If given, doublets will be 
searched for independently for each sample, which is preferable if they 
represent different captures. If your samples were multiplexed using cell
hashes, want you want to give here are the different batches/wells (i.e. 
independent captures, since doublets cannot arise across them) rather
than biological samples.}

\item{artificialDoublets}{The approximate number of artificial doublets to 
create. If \code{NULL}, will be the maximum of the number of cells or 
\code{5*nbClusters^2}.}

\item{knownDoublets}{An optional logical vector of known doublets (e.g. 
through cell barcodes), or the name of a colData column of `sce` containing
that information.}

\item{clust.method}{The clustering method if \code{clusters} is not given 
(we recommend the `fastcluster` method).}

\item{use.cxds}{Logical; whether to use `scds::cxds` scores in addition to 
information from artificial/known doublets as part of the predictors.}

\item{minClusSize}{The minimum cluster size for `quickCluster`/`overcluster` 
(default 50); ignored if \code{clusters} is given.}

\item{maxClusSize}{The maximum cluster size for `overcluster`. Ignored if 
\code{clusters} is given or if \code{clust.method!='overcluster'}.}

\item{nfeatures}{The number of top features to use (default 1000)}

\item{dims}{The number of dimensions used to build the network. If omitted,
will be estimated using `intrinsicDimension::maxLikGlobalDimEst`.}

\item{dbr}{The expected doublet rate. By default this is assumed to be 1\% 
per thousand cells captured (so 4\% among 4000 thousand cells), which is 
appropriate for 10x datasets. Corrections for homeotypic doublets will be
performed on the given rate.}

\item{dbr.sd}{The standard deviation of the doublet rate.}

\item{k}{Number of nearest neighbors (for KNN graph).}

\item{returnType}{Either "sce" (default), "table" (to return the table of 
cell attributes including artificial doublets), or "full" (returns an SCE
object containing both the real and artificial cells.}

\item{score}{Score to use for final classification.}

\item{threshold}{Logical; whether to threshold scores into binary doublet 
calls}

\item{verbose}{Logical; whether to print messages and the thresholding plot.}

\item{BPPARAM}{Used for multithreading when splitting by samples (i.e. when 
`samples!=NULL`); otherwise passed to eventual PCA and K/SNN calculations.}
}
\value{
The \code{sce} object with several additional colData columns, in 
particular `scDblFinder.score` (the final score used) and `scDblFinder.class` 
(whether the cell is called as 'doublet' or 'singlet'). See 
\code{vignette("scDblFinder")} for more details; for alternative return 
values, see the `returnType` argument.
}
\description{
Identification of heterotypic (or neotypic) doublets in single-cell RNAseq 
using cluster-based generation of artifical doublets.
}
\details{
This function generates artificial doublets from clusters of real cells, 
evaluates their prevalence in the neighborhood of each cells, and uses this 
along with additional features to classify doublets. The approach is 
complementary to doublets identified via cell hashes and SNPs in multiplexed
samples: the latter can identify doublets formed by cells of the same type
from two samples, which are nearly undistinguishable from real cells 
transcriptionally, but cannot identify doublets made by cells of the 
same sample. See \code{vignette("scDblFinder")} for more details on the 
method.

When multiple samples/captures are present, they should be specified using 
the \code{samples} argument. Although the classifier will be trained 
globally, thresholding and the more computationally-intensive steps will be 
performed separately for each sample (in parallel if \code{BPPARAM} is 
given).

When inter-sample doublets are available, they can be provided to 
`scDblFinder` through the \code{knownDoublets} argument to improve the 
identification of further doublets.
}
\examples{
library(SingleCellExperiment)
sce <- mockDoubletSCE()
sce <- scDblFinder(sce, verbose=FALSE)
table(sce$scDblFinder.class)

}
