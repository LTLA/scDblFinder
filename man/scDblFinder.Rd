% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scDblFinder.R
\name{scDblFinder}
\alias{scDblFinder}
\title{scDblFinder}
\usage{
scDblFinder(
  sce,
  artificialDoublets = NULL,
  clusters = NULL,
  samples = NULL,
  knownDoublets = NULL,
  clust.method = c("fastcluster", "overcluster"),
  minClusSize = min(50, ncol(sce)/5),
  maxClusSize = NULL,
  nfeatures = 1000,
  dims = 20,
  dbr = NULL,
  dbr.sd = 0.015,
  k = 20,
  returnType = c("sce", "table", "full"),
  score = c("xgb", "xgb.local.optim", "weighted", "ratio"),
  verbose = is.null(samples),
  BPPARAM = SerialParam()
)
}
\arguments{
\item{sce}{A \code{\link[SummarizedExperiment]{SummarizedExperiment-class}}}

\item{artificialDoublets}{The approximate number of artificial doublets to 
create. If NULL, will be the maximum of the number of cells or 
`5*nbClusters^2`.}

\item{clusters}{The optional cluster assignments (if omitted, will run 
clustering). This is used to make doublets more efficiently. `clusters` 
should either be a vector of labels for each cell, or the name of a colData 
column of `sce`.}

\item{samples}{A vector of the same length as cells (or the name of a column 
of `colData(sce)`), indicating to which sample each cell belongs. Here, a 
sample is understood as being processed independently. If omitted, doublets 
will be searched for with all cells together. If given, doublets will be 
searched for independently for each sample, which is preferable if they 
represent different captures. If your samples were multiplexed using cell
hashes, want you want to give here are the different batches/wells (i.e. 
independent captures, since doublets cannot arise across them) rather
than biological samples.}

\item{clust.method}{The clustering method if `clusters` is not given.}

\item{minClusSize}{The minimum cluster size for `quickCluster`/`overcluster` 
(default 50); ignored if `clusters` is given.}

\item{maxClusSize}{The maximum cluster size for `overcluster`. Ignored if 
`clusters` is given or if `clust.method`!='overcluster'.}

\item{nfeatures}{The number of top features to use (default 1000)}

\item{dims}{The number of dimensions used to build the network (default 20)}

\item{dbr}{The expected doublet rate. By default this is assumed to be 1\% 
per thousand cells captured (so 4\% among 4000 thousand cells), which is 
appropriate for 10x datasets.}

\item{dbr.sd}{The standard deviation of the doublet rate, defaults to 0.015.}

\item{k}{Number of nearest neighbors (for KNN graph).}

\item{returnType}{Either "sce" (default), "table" (to return the table of 
cell attributes including artificial doublets), or "full" (returns an SCE
object containing both the real and artificial cells.}

\item{score}{Score to use for final classification.}

\item{verbose}{Logical; whether to print messages and the thresholding plot.}

\item{BPPARAM}{Used for multithreading when splitting by samples (i.e. when 
`samples!=NULL`); otherwise passed to eventual PCA and K/SNN calculations.}
}
\value{
The `sce` object with several additional colData columns, in 
particular `scDblFinder.score` (the final score used) and `scDblFinder.class` 
(whether the cell is called as 'doublet' or 'singlet'). Alternatively, if 
`fullTable=TRUE`, a data.frame will be returned with information about real 
and artificial cells.
}
\description{
Identification of doublets in single-cell RNAseq directly from counts using 
overclustering-based generation of artifical doublets.
}
\examples{
library(SingleCellExperiment)
m <- t(sapply( seq(from=0, to=5, length.out=50), 
               FUN=function(x) rpois(50,x) ) )
sce <- SingleCellExperiment( list(counts=m) )
sce <- scDblFinder(sce, verbose=FALSE)
table(sce$scDblFinder.class)

}
